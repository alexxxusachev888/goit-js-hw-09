{"mappings":"AAGAA,SAASC,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,OACVC,QAAS,IAIX,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,gBACjCC,UAAWF,SAASC,cAAc,oBAClCE,KAAMH,SAASC,cAAc,eAC7BG,MAAOJ,SAASC,cAAc,gBAC9BI,QAASL,SAASC,cAAc,kBAChCK,QAASN,SAASC,cAAc,mBAGlCH,EAAKC,SAASQ,UAAW,EAEzB,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GAUN,OARIA,EAAc,GAAGC,WAAaC,KAAKC,IAAIF,UAGzCzB,SAASC,OAAO2B,QAAQ,sCAExBrB,EAAKC,SAASQ,UAAW,EAGpBQ,EAAc,E,GAInBK,EAAgBC,UAAUvB,EAAKI,UAAWM,GAASO,cAAc,GAAGC,UAC1EM,QAAQC,IAAIH,GAEZ,MAAMI,EAAQ,CACZC,WAAY,KACZC,UAAU,EAEVC,QACMV,KAAKS,WAITT,KAAKS,UAAW,EAChBT,KAAKQ,WAAaG,aAAY,MAiBlC,UAAqBzB,KACnBA,EAAIC,MACJA,EAAKC,QACLA,EAAOC,QACPA,IAEAR,EAAKK,KAAK0B,YAAcC,EAAe3B,GACvCL,EAAKM,MAAMyB,YAAcC,EAAe1B,GACxCN,EAAKO,QAAQwB,YAAcC,EAAezB,GAC1CP,EAAKQ,QAAQuB,YAAcC,EAAexB,E,CAlBtCyB,CAyBN,SAAmBC,GAEjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENhC,EAAOkC,KAAKC,MAAMN,EAAKI,GACvBhC,EAAQiC,KAAKC,MAAMN,EAAMI,EAAOD,GAChC9B,EAAUgC,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAC3C5B,EAAU+B,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KACL9B,E,MACAC,E,QACAC,E,QACAC,E,CA1CeiC,CANKnB,EAAgBR,KAAKM,OAOtB,GAChB,K,GAoBP,SAASY,EAAeU,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAjBnC5C,EAAKC,SAAS4C,iBAAiB,SAAS,KACtCnB,EAAMG,OAAO","sources":["src/js/02-timer.js"],"sourcesContent":["/* import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\"; */\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '30px',\n  opacity: 1,\n  // ...\n});\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  pickInput: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n}\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n\n    if (selectedDates[0].getTime() <= this.now.getTime()) {\n      /* window.alert('Please choose a date in the future');\n       */\n      Notiflix.Notify.failure('Please choose a date in the future');\n    } else {\n      refs.startBtn.disabled = false;\n    }\n\n    return selectedDates[0];\n  }\n}\n\nconst pickrInstatce = flatpickr(refs.pickInput, options).selectedDates[0].getTime();\nconsole.log(pickrInstatce);\n\nconst timer = {\n  intervalId: null,\n  isActive: false,\n\n  start() {\n    if (this.isActive) {\n      return\n    }\n\n    this.isActive = true;\n    this.intervalId = setInterval(() => {\n      const deltaTime = pickrInstatce - Date.now();\n\n      /*    if (deltaTime) {\n           return\n         } */\n\n      const time = convertMs(deltaTime);\n      updateClock(time);\n    }, 1000);\n  }\n}\n\nrefs.startBtn.addEventListener('click', () => {\n  timer.start();\n});\n\nfunction updateClock({\n  days,\n  hours,\n  minutes,\n  seconds\n}) {\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return {\n    days,\n    hours,\n    minutes,\n    seconds\n  };\n}\n\n/* const deadLine = pickrInstatce;\n\nfunction getRemainingTime(endtime) {\n  const total = endtime - Date.parse(new Date()),\n    days = Math.floor((total / (1000 * 60 * 60 * 24))),\n    hours = Math.floor((total / (1000 * 60 * 60) % 24)),\n    minutes = Math.floor((total / 1000 / 60) % 60),\n    seconds = Math.floor((total / 1000) % 60);\n\n  return {\n    total,\n    days,\n    hours,\n    minutes,\n    seconds\n  };\n}\n\nfunction setClock(selector, endtime) {\n  const timer = document.querySelector(selector),\n    days = timer.querySelector('[data-days]'),\n    hours = timer.querySelector('[data-hours]'),\n    minutes = timer.querySelector('[data-minutes]'),\n    seconds = timer.querySelector('[data-seconds]'),\n    IntervalId = setInterval(updateClock, 1000)\n\n  function updateClock() {\n    const currentTime = getRemainingTime(endtime);\n\n    days.innerHTML = addLeadingZero(currentTime.days);\n    hours.innerHTML = addLeadingZero(currentTime.hours);\n    minutes.innerHTML = addLeadingZero(currentTime.minutes);\n    seconds.innerHTML = addLeadingZero(currentTime.seconds);\n\n    if (currentTime.total <= 0) {\n      clearInterval(IntervalId);\n    }\n  }\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nrefs.startBtn.addEventListener('click', () => {\n  setClock('.timer', deadLine);\n}); */"],"names":["Notiflix","Notify","init","width","position","distance","opacity","$40d383fb392a7037$var$refs","startBtn","document","querySelector","pickInput","days","hours","minutes","seconds","disabled","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","getTime","this","now","failure","$40d383fb392a7037$var$pickrInstatce","flatpickr","console","log","$40d383fb392a7037$var$timer","intervalId","isActive","start","setInterval","textContent","$40d383fb392a7037$var$addLeadingZero","$40d383fb392a7037$var$updateClock","ms","second","minute","hour","day","Math","floor","$40d383fb392a7037$var$convertMs","value","String","padStart","addEventListener"],"version":3,"file":"02-timer.1a336b50.js.map"}