{"mappings":"YAUA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CACNH,WACAC,UAGFG,EAAO,CACLJ,WACAC,S,GAGHA,E,IA1BPQ,SAASC,OAAOC,KAAK,CACnBC,MAAO,QACPZ,SAAU,aACVa,SAAU,QACVC,QAAS,IAIOC,SAASC,cAAc,SAuB/BC,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAMC,EAAeF,EAAMG,cAAcC,SACrCC,EAAQC,OAAOJ,EAAanB,MAAMwB,OAChCC,EAAOF,OAAOJ,EAAaM,KAAKD,OAChCE,EAASH,OAAOJ,EAAaO,OAAOF,OAEjCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC7B,EAAc6B,EAAGL,GACdM,MAAK,SAAAC,G,IACJ9B,EAAQ8B,EAAR9B,SACAC,EAAK6B,EAAL7B,MAEAQ,SAASC,OAAOqB,QAAQ,qBAAoCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAEnEgC,OAAM,SAAAH,G,IACL9B,EAAQ8B,EAAR9B,SACAC,EAAK6B,EAAL7B,MAEAQ,SAASC,OAAOwB,QAAQ,oBAAmCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAErEsB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["Notiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '120px',\n  opacity: 1,\n  // ...\n});\n\nconst formBlock = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay\n        });\n      } else {\n        reject({\n          position,\n          delay\n        });\n      }\n    }, delay);\n\n  })\n}\n\nformBlock.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formElements = event.currentTarget.elements;\n  let delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({\n        position,\n        delay\n      }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({\n        position,\n        delay\n      }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notiflix","Notify","init","width","distance","opacity","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","delay1","Number","value","step","amount","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.57a18bb8.js.map"}